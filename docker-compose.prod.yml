version: '3.9'

services:
  backend:
    container_name: "${APP_NAME}"
    build:
      context: .
      dockerfile: deployment/Dockerfile
      args:
        - APP_NAME=${APP_NAME}
        - APP_HOST=${APP_HOST}
        - APP_PORT=${APP_PORT}
    volumes:
      - ./src:/usr/app/
      - ./deployment/scripts:/app/deployment/scripts/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${APP_NAME}.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}.entrypoints=web"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=${APP_PORT:-8000}"
    env_file: .env
    expose:
      - "${APP_PORT:-8000}"
    depends_on:
      db:
        condition: service_healthy
    command: [ "/bin/sh", "/deployment/scripts/backend/start.sh" ]

  db:
    image: postgres:15.2-alpine
    container_name: "${APP_NAME}-db"
    hostname: "${POSTGRES_HOST:-db}"
    volumes:
      - postgres_data_dir:/var/lib/postgresql/data/
    env_file: .env
    expose:
      - "${POSTGRES_PORT:-5432}"
    shm_size: 1g
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  nginx:
    image: nginx:latest
    container_name: "${APP_NAME}-nginx"
    volumes:
      - ./deployment/scripts/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${APP_NAME}-nginx.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.routers.${APP_NAME}-nginx.entrypoints=websecure"
      - "traefik.http.services.${APP_NAME}-nginx.loadbalancer.server.port=80"
      - "traefik.http.routers.${APP_NAME}-nginx.tls=true"
      - "traefik.http.routers.${APP_NAME}-nginx.tls.certresolver=myresolver"
    expose:
      - "80"
      - "443"
    depends_on:
        - backend
        - traefik

  traefik:
    image: traefik:v2.5
    container_name: "${APP_NAME}-traefik"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--api.dashboard=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--tracing=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"

volumes:
  static_files:
  media_files:
  postgres_data_dir:
  redis_data:
